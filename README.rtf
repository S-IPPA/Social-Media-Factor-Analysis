1)Account_Registration.py\
- Registers accounts from the post-CSV file to the account database.\
\
2)Analysis_Cluster.py\
- Creates CSV files for each cluster using the Louvain method (implemented in Gephi).\
\
3)Analysis_DateTime.py\
- Performs analysis processing for visualizing time-series relationships between factors and conducting time-series cross-correlation analysis.\
\
4)Analysis_Gephi.py\
- Creates a GEFX file for visualizing the retweet network in Gephi.\
\
5)Analyze.py\
- Performs individual bot analysis.\
\
6)BERT_Sentimental.py\
- Calculates sentiment scores using BERT and adds them to the post-CSV file.\
\
7)Botometer.py\
- Calculates bot scores using Botometer and adds them to the account database.\
\
8)Common.py\
- Common processing used in each script.\
\
9)FirstProcess.py\
- Performs k-core decomposition.\
\
10)Main_Collection.py\
- Collects the target posts (including reposts) and saves them as a CSV file. An X API account is required. Enter the following command to start the script.\
python Main_Collection.py KeyWord 2024-01-01-2024-12-31\
\
11)Main.py\
- Executes all processing except for individual bot analysis in one batch.\
\
12)Visualization_ClusterPercentage.py\
- Creates a pie chart showing the percentage of each cluster.\
\
13)Visualization_ClusterRelationship.py\
- Creates a heatmap showing the repost relationships between each cluster.\
\
14)Visualization_ClusterSentimental.py\
- Creates a box plot showing the sentiment scores for each cluster.\
\
15)Visualization_DateTime.py\
- Visualizes the time series relationships between each factor and performs time series cross-correlation analysis.\
\
16)Visualization_Repost_By_Bot.py\
- Create a bar chart showing the number and percentage of reposts by bots for each cluster.\
\
17)Visualization_RepostPercentage_Bot.py\
- Create a donut chart showing the repost percentage before and after k-core decomposition.\
\
18)Visualization.py\
- Common processing performed for each visualization process.\
